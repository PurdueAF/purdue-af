#!/bin/bash
#Clean up /tmp, leaving files belonging to active users, as indicated
#by procman exemption files.

#Where are the active job files kept?
active_dir=${active_dir:-/var/spool/slurm/active}

#Slurm Timeout
SLURM_TIMEOUT=20

#Start time for tmp cleaning
clean_time="$(date +%s%N)"

if [ -d $active_dir -a ! -f /flags/savetmp ]; then

	if [ -f /flags/delaytmp ]; then
		find_args=" -daystart -mtime +30 "
	else
		find_args=""
	fi
	active_files=$(cd $active_dir;echo *active)
	for file in $active_files; do
		if [[ "$file" != "*active" ]]; then
			user_id=${file%%-*}
			find_args="$find_args ! -user $user_id"
		fi
	done

	#If timeout occurs on the find, skip directory hunt since it may run too long

	#bytes after, bytes before, inodes after, inodea before
	declare -a ba bb ia ib
	bb=( `df /tmp | tail -1` )
	ib=( `df -i /tmp | tail -1` )
	/usr/bin/timeout $SLURM_TIMEOUT find /dev/shm -xdev ! -type d \
		\( ! -user root -o -mmin +30 \) \
		$find_args \
		-exec $debug rm {} \; \
		>/dev/null 2>/dev/null

	if [[ $? -eq 124 ]]; then
		logger -t prolog "$SLURM_JOB_ID $SLURM_JOB_USER Prolog /dev/shm clean problem - timed out at $SLURM_TIMEOUT seconds."
		to=" timeout"
	else
		to=""
		(cd /dev/shm && \
			find . -xdev -depth -type d \
			! -name . ! -name .. ! -name lost+found \
			$find_args \
			-exec $debug rmdir {} \; \
			>/dev/null 2>/dev/null
		)
	fi
	ba=( `df /dev/shm | tail -1` )
	ia=( `df -i /dev/shm | tail -1` )
	if [[ ( ${#bb[*]} -eq 6 ) && ( ${#ba[*]} -eq 6 ) && ( ${#ib[*]} -eq 6 ) && ( ${#ia[*]} -eq 6 ) ]]; then
		r=$((ba[2]-bb[2]))
		s=$((ia[2]-ib[2]))
		logger -t prolog "$SLURM_JOB_ID $SLURM_JOB_USER Prolog dev/shm clean$to blocks/inodes change, used: $r/$s, ${ba[4]}/${ia[4]}."
	else
		logger -t prolog "$SLURM_JOB_ID $SLURM_JOB_USER Prolog dev/shm clean problem - unexpected df result counts (${#bb[*]},${#ba[*]},${#ib[*]},${#ia[*]})."
	fi

fi
#end time for shm cleaning
N=$(($(date +%s%N) - clean_time))
logger -t prolog "$SLURM_JOB_ID $SLURM_JOB_USER Prolog tmp clean: $(printf '%d.%03d\n' $((N/1000000000)) $(((N/1000000)%1000))) seconds."

exit 0