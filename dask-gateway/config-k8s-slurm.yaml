gateway:
  replicas: 1
  prefix: /
  loglevel: INFO
  image:
    name: geddes-registry.rcac.purdue.edu/cms/dask-gateway-server
    tag: 2023.9.0-purdue.v2
    pullPolicy: IfNotPresent
  auth:
    type: simple
    simple:
      password: null
  nodeSelector:
    cms-af-prod: "true"
  tolerations:
    - key: "hub.jupyter.org/dedicated"
      operator: "Equal"
      value: "cms-af"
      effect: "NoSchedule"
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 2
      memory: 4Gi
  service:
    annotations:
      metallb.universe.tf/address-pool: geddes-public-pool
  env:
    - name: NAMESPACE
      value: cms
    - name: RELEASE_NAME
      value: dask-gateway-k8s-slurm
  extraConfig:
    slurmConfig: |
        import os
        RELEASE_NAME = os.environ["RELEASE_NAME"]
        NAMESPACE = os.environ["NAMESPACE"]

        c.DaskGateway.backend_class = "dask_gateway_server.backends.jobqueue.slurm.SlurmBackend"
        c.DaskGateway.address = ':8786'
        c.SlurmBackend.api_url = f'http://api-{RELEASE_NAME}.{NAMESPACE}.geddes.rcac.purdue.edu:8000/api'
        c.SlurmBackend.cluster_start_timeout = 120
        c.ClusterConfig.idle_timeout = 3600

        from dask_gateway_server.options import Options, Integer, Float, Mapping, String, Select

        def options_handler(options):
            setup_cmd = "export DASK_TEMPORARY_DIRECTORY=/tmp/dask-$USER; "
            return {
                "worker_cores": options.worker_cores,
                "worker_memory": int(options.worker_memory * 2 ** 30),
                "environment": options.env,
                "scheduler_cmd": f"{options.conda_env}/bin/dask-scheduler",
                "scheduler_partition": "hammer-nodes",
                "scheduler_reservation": "CMSLOCAL",
                "worker_cmd": f"{options.conda_env}/bin/dask-worker",
                "account": "cms",
                "time": "1-00:00:00",
                "scheduler_setup": setup_cmd,
                "worker_setup": setup_cmd,
                "staging_directory": "/depot/cms/users/{username}/.dask-gateway/"
            }
        c.Backend.cluster_options = Options(
            String("conda_env", default="/depot/cms/kernels/python3", label="Conda environment"),
            Integer("worker_cores", default=1, min=1, max=4, label="Cores per worker"),
            Float("worker_memory", default=4, min=1, max=16, label="Memory per worker (GiB)"),
            Mapping("env", {"X509_USER_PROXY": "", "WORKDIR": ""}, label="Environment variables"),
            handler=options_handler,
        )
traefik:
  replicas: 1
  image:
    name: geddes-registry.rcac.purdue.edu/docker-hub-cache/library/traefik
    tag: 2.10.4
    pullPolicy: IfNotPresent
  loglevel: WARN
  dashboard: false
  service:
    type: ClusterIP
    annotations:
      metallb.universe.tf/address-pool: geddes-private-pool
    ports:
      web:
        port: 80
      tcp:
        port: 8786
  nodeSelector:
    cms-af-prod: "true"
  tolerations:
    - key: "hub.jupyter.org/dedicated"
      operator: "Equal"
      value: "cms-af"
      effect: "NoSchedule"
