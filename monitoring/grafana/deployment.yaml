apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: cms-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - name: grafana
          containerPort: 3000
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
          - mountPath: /var/lib/grafana 
            name: grafana-storage
            readOnly: false
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
            readOnly: false
          - mountPath: /etc/grafana/grafana.ini
            subPath: grafana.ini
            name: grafana-config
            readOnly: true
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: pvc-grafana-data
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
        - name: grafana-config
          configMap:
            name: grafana-config
      nodeSelector: {'eos': 'true'}
      tolerations:
      - key: "hub.jupyter.org/dedicated"
        operator: "Equal"
        value: "cms-af"
        effect: "NoSchedule"
      initContainers:
      - name: grafana-data-permission-fix
        image: busybox
        command: ["/bin/chmod","-R","777", "/var/lib/grafana"]
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      restartPolicy: Always
