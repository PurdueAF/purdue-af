# Test values for external Envoy configuration testing

triton:
  replicas: 1
  # image: fastml/triton-torchgeo:22.07-py3-geometric # works for CMSSW run3
  image: fastml/triton-torchgeo:25.08-py3-geometric # works for CMSSW run3
  command: ["/bin/sh", "-c"]
  args:
    - |
      /opt/tritonserver/bin/tritonserver \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoBTag/Combined/data/models/ \
      --log-verbose=0 \
      --disable-auto-complete-config \
      --exit-timeout-secs=60
  resources:
    limits: { cpu: 1, memory: 8Gi, nvidia.com/gpu: 1 }
    requests: { cpu: 1, memory: 8Gi, nvidia.com/gpu: 1 }
  modelRepository:
    enabled: true
    storageType: cvmfs-pvc
    mountPath: /cvmfs
  nodeSelector: { "cms-af-prod": "true" }
  tolerations:
    - key: hub.jupyter.org/dedicated
      operator: Equal
      value: cms-af
      effect: NoSchedule
  readinessProbe:
    initialDelaySeconds: 0
    failureThreshold: 20
    command:
      ["/bin/sh", "-c", '"curl -sf http://localhost:8000/v2/health/ready"']
  startupProbe:
    initialDelaySeconds: 0
    failureThreshold: 20

envoy:
  enabled: true
  replicas: 1
  image: "envoyproxy/envoy:v1.30.9"
  external_config:
    load_from_configmap: true
    configmap_name: "supersonic-dev-config"
    configmap_key: "envoy-config.yaml"

prometheus:
  enabled: false

grafana:
  enabled: false

keda:
  enabled: false

tempo:
  enabled: false

opentelemetry-collector:
  enabled: false

metricsCollector:
  enabled: false
