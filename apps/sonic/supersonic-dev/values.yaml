serverLoadThreshold: 100

triton:
  # image: nvcr.io/nvidia/tritonserver:24.11-py3
  # image: fastml/triton-torchgeo:22.07-py3-geometric
  image: fastml/triton-torchgeo:25.08-py3-geometric
  command: ["/bin/sh", "-c"]
  args:
    - |
      /opt/tritonserver/bin/tritonserver \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoBTag/Combined/data/models/ \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoEgamma/EgammaPhotonProducers/data/models/ \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoTauTag/TrainingFiles/data/DeepTauIdSONIC/ \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoMET/METPUSubtraction/data/models/ \
      --allow-gpu-metrics=true \
      --log-verbose=0 \
      --strict-model-config=false \
      --exit-timeout-secs=60

  resources:
    limits:
      nvidia.com/gpu: ${sonic_gpus_initial}
      cpu: 2
      memory: 8G
    requests:
      nvidia.com/gpu: ${sonic_gpus_initial}
      cpu: 2
      memory: 8G
  nodeSelector: { "cms-af-prod": "true" }
  tolerations:
    - key: hub.jupyter.org/dedicated
      operator: Equal
      value: cms-af
      effect: NoSchedule
  service:
    labels:
      scrape_metrics: "true"
    annotations:
      metallb.universe.tf/address-pool: geddes-private-pool
  modelRepository:
    enabled: true
    storageType: cvmfs-pvc
    mountPath: /cvmfs
  readinessProbe:
    successThreshold: 3
    timeoutSeconds: 10
  #   reset: true

envoy:
  enabled: true
  nodeSelector: { "cms-af-prod": "true" }
  tolerations:
    - key: hub.jupyter.org/dedicated
      operator: Equal
      value: cms-af
      effect: NoSchedule
  loadBalancerPolicy: "ROUND_ROBIN"
  service:
    type: LoadBalancer
  ingress:
    enabled: ${enable_ingresses}
    hostName: sonic-cms-dev.geddes.rcac.purdue.edu
    ingressClassName: public
  rate_limiter:
    prometheus_based:
      enabled: false
    listener_level:
      enabled: false
  dynamic_routing:
    enabled: true
  lua_filter:
    enabled: true
    lua_config: "cfg/envoy-filter-dynamic.lua"

keda:
  enabled: false
  minReplicaCount: 1
  maxReplicaCount: 10
  scaleUp:
    stabilizationWindowSeconds: 30
    periodSeconds: 15
    stepsize: 1
  scaleDown:
    stabilizationWindowSeconds: 45
    periodSeconds: 45
    stepsize: 1

ingress:
  enabled: false

prometheus:
  external:
    enabled: true
    url: prometheus-af.geddes.rcac.purdue.edu
    port: 443
    scheme: https

grafana:
  enabled: false
