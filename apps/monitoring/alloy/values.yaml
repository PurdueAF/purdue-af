# Chart: grafana/alloy

controller:
  type: daemonset
  replicas: 1
  service:
    enabled: false
  tolerations: []
  nodeSelector: {}

serviceAccount:
  create: true

rbac:
  create: true

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

alloy:
  # River configuration: collect Kubernetes pod logs and send to Loki
  config: |
    logging {
      level = "info"
      format = "logfmt"
    }

    discovery.kubernetes "pods" {
      role = "pod"
    }

    loki.source.kubernetes "pods" {
      targets    = discovery.kubernetes.pods.targets
      forward_to = [loki.process.pods.receiver]
    }

    loki.process "pods" {
      static_labels {
        values = {
          app="jupyterhub"
        }
      }
      forward_to = [loki.write.default.receiver]
    }

    loki.write "default" {
      endpoint {
        url = "http://loki.cms.svc.cluster.local:3100/loki/api/v1/push"
      }
    }

    // eBPF profiling for Dask Gateway scheduler/workers â†’ Pyroscope
    // Requires Alloy to run with eBPF permissions (privileged or CAP_BPF) and
    // access to /sys/fs/bpf, /sys/kernel/debug and kernel modules. Ensure the
    // DaemonSet has the appropriate securityContext and mounts at deploy time.

    // Discover all pods; narrow to Dask components via selectors below
    pyroscope.ebpf "dask" {
      targets = discovery.kubernetes.pods.targets

      // Limit profiling scope to Dask scheduler/workers
      selectors = [
        {
          match_labels = {
            "dask.org/component" = "worker"
          }
        },
        {
          match_labels = {
            "dask.org/component" = "scheduler"
          }
        }
      ]

      sampling_rate = 97
      forward_to    = [pyroscope.write.default.receiver]
    }

    // Send profiles to Pyroscope
    pyroscope.write "default" {
      endpoint {
        url = "http://pyroscope.pyroscope.svc.cluster.local:4040"
      }
    }
