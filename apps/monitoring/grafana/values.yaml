# Grafana Helm Chart Values
# https://github.com/grafana/helm-charts/tree/main/charts/grafana

# Persistence configuration
persistence:
  enabled: true
  type: pvc
  size: 20Gi
  storageClassName: ${multinode_storage_class}
  accessModes:
    - ReadWriteMany

# Ingress configuration
ingress:
  enabled: ${enable_ingresses}
  ingressClassName: public
  path: /grafana
  pathType: Prefix
  hosts:
    - cms.geddes.rcac.purdue.edu
  # tls:
  #   - secretName: grafana-tls
  #     hosts:
  #       - cms.geddes.rcac.purdue.edu

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 3000

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 472
  fsGroup: 472
  fsGroupChangePolicy: OnRootMismatch

# Disable init chown on NFS/root-squash volumes; rely on fsGroup instead
initChownData:
  enabled: false

# Mount writable tmp dirs for paths that fail on root-squash NFS
extraVolumes:
  - name: grafana-plugins-tmp
    emptyDir: {}
  - name: grafana-png-tmp
    emptyDir: {}
  - name: grafana-pdf-tmp
    emptyDir: {}
  - name: grafana-csv-tmp
    emptyDir: {}

extraVolumeMounts:
  - name: grafana-plugins-tmp
    mountPath: /var/lib/grafana/plugins
  - name: grafana-png-tmp
    mountPath: /var/lib/grafana/png
  - name: grafana-pdf-tmp
    mountPath: /var/lib/grafana/pdf
  - name: grafana-csv-tmp
    mountPath: /var/lib/grafana/csv

# Add an init container that sets permissive mode on the PVC root without chown
extraInitContainers:
  - name: init-chmod-data
    image: docker.io/library/busybox:1.36
    imagePullPolicy: IfNotPresent
    command:
      - sh
      - -c
      - >-
        mkdir -p /var/lib/grafana &&
        chmod -R 0777 /var/lib/grafana || true &&
        ls -ld /var/lib/grafana || true
    securityContext:
      runAsUser: 0
      runAsNonRoot: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 200m
        memory: 128Mi
    volumeMounts:
      - name: storage
        mountPath: /var/lib/grafana

extraConfigmapMounts:
  - name: grafana-plugins-provisioning
    mountPath: /etc/grafana/provisioning/plugins
    configMap: grafana-plugins-provisioning
    readOnly: true

envValueFrom:
  OPENAI_API_KEY:
    secretKeyRef:
      name: a2rchi-openai-api-key
      key: OPENAI_API_KEY

# Resources
resources:
  requests:
    cpu: 2000m
    memory: 4Gi
  limits:
    cpu: 2000m
    memory: 4Gi

# Ensure rollout does not run two pods concurrently to avoid PVC multi-attach
deploymentStrategy:
  type: Recreate

# Grafana configuration
grafana.ini:
  server:
    root_url: https://cms.geddes.rcac.purdue.edu/grafana/
    serve_from_sub_path: true
  dashboards:
    default_home_dashboard_path: /var/lib/grafana/dashboards/public/default.json
  auth.anonymous:
    enabled: true
    org_name: Main Org.
    org_role: Viewer
    hide_version: true

# Dashboard and datasource provisioning
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: "public"
        orgId: 1
        folder: "Public Dashboards"
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/public
      - name: "private"
        orgId: 1
        folder: "Private Dashboards"
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/private

# Use ConfigMap for dashboards
dashboardsConfigMaps:
  public: grafana-public-dashboards
  private: grafana-private-dashboards

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: prometheus
        type: prometheus
        url: https://prometheus-af.geddes.rcac.purdue.edu:443
        access: proxy
        isDefault: true
      - name: prometheus-rancher
        type: prometheus
        url: http://rancher-monitoring-prometheus.cattle-monitoring-system:9090
        access: proxy
        isDefault: false
      - name: tempo
        type: tempo
        url: http://sonic-server-tempo:3100
        access: proxy
        isDefault: false
        basicAuth: false
        jsonData:
          httpMethod: "GET"
          timeInterval: "5s"
          tlsSkipVerify: true
          serviceMap:
            datasourceUid: "prometheus"
          nodeGraph:
            enabled: true
      - name: pyroscope
        type: grafana-pyroscope-datasource
        url: http://pyroscope.cms.svc.cluster.local:4040
        jsonData:
          minStep: 15s
      - name: loki
        type: loki
        url: http://loki.cms.svc.cluster.local:3100
        access: proxy
        isDefault: false
        jsonData:
          maxLines: 1000

plugins:
  - grafana-llm-app
  - grafana-pyroscope-app
