apiVersion: batch/v1
kind: CronJob
metadata:
  name: af-userlist-sync
  namespace: cms
spec:
  schedule: "*/5 * * * *"  # Run every 5 minutes
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: hub
          restartPolicy: Never
          containers:
          - name: af-userlist-sync
            image: rockylinux:8.9
            command:
            - /bin/bash
            - -c
            - |
              SECRET_NAME=purdue-auth-test

              dnf install -y openldap-clients --nogpgcheck
              
              # Install kubectl
              cat <<EOF > /etc/yum.repos.d/kubernetes.repo
              [kubernetes]
              name=Kubernetes
              baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
              enabled=1
              gpgcheck=1
              repo_gpgcheck=1
              gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
              EOF
              dnf install -y kubectl --nogpgcheck
              
              # Get Purdue users
              echo "Fetching Purdue users..."
              ldapsearch -x host=hammer.rcac.purdue.edu | grep uid: | cut -d " " -f2 > /tmp/purdue-auth.txt
              echo "Purdue users:"
              cat /tmp/purdue-auth.txt
              
              # Check if the list is not empty before updating secret
              if [ -s /tmp/purdue-auth.txt ]; then
                echo "Purdue users list is not empty, updating purdue-auth-test secret..."
                
                # Check if secret already exists
                if kubectl get secret $SECRET_NAME >/dev/null 2>&1; then
                  echo "Secret exists, updating it..."
                  # Update existing secret
                  kubectl patch secret $SECRET_NAME \
                    --type='merge' \
                    -p="{\"data\":{\"purdue-users\":\"$(base64 -w0 /tmp/purdue-auth.txt)\"}}"
                else
                  echo "Secret does not exist, creating it..."
                  # Create new secret
                  kubectl create secret generic $SECRET_NAME \
                    --from-file=purdue-users=/tmp/purdue-auth.txt
                fi
                
                echo "Secret $SECRET_NAME updated successfully"
              else
                echo "Purdue users list is empty, skipping secret update to preserve existing data"
              fi
              
              # Get CERN CMS users
              # echo "Fetching CERN CMS users..."
              # wget --no-check-certificate \
              #   --certificate=/etc/grid-security-ro/x509up \
              #   --private-key=/etc/grid-security-ro/x509up \
              #   https://voms2.cern.ch:8443/voms/cms/services/VOMSCompatibility?method=getGridmapUsers \
              #   -O /tmp/grid-mapfile.xml
              # sleep 60
              # xmllint --format /tmp/grid-mapfile.xml | \
              #   grep 'getGridmapUsersReturn xsi:type' | \
              #   cut -d '>' -f2 | \
              #   cut -d '<' -f1 | \
              #   grep "OU=Users" | \
              #   cut -d "=" -f6 | \
              #   cut -d "/" -f1 > /tmp/cern-auth.txt
              # echo "CERN users:"
              # cat /tmp/cern-auth.txt
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"
            volumeMounts:
            # - name: x509-proxy
            #   mountPath: /etc/grid-security-ro
            #   readOnly: true
            - name: ldap-conf
              mountPath: /etc/openldap/ldap.conf
              subPath: ldap.conf
            # - name: ldap-conf
            #   mountPath: /etc/pki
            #   subPath: pki
          volumes:
          # - name: x509-proxy
          #   secret:
          #     secretName: x509-proxy# In your CronJob spec:
          - name: ldap-conf
            configMap:
              name: ldap-conf