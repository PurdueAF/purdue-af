singleuser:
  podNameTemplate: "purdue-af-{userid}"
  uid: 0
  cmd: 
  image:
    name: "geddes-registry.rcac.purdue.edu/cms/cmsaf-alma8"
    tag: "0.9.4"
  extraLabels:
    username_unescaped: "{legacy_escape_username}"
    docker_image_tag: "0.9.4"
  startTimeout: 3600
  profileList:
    - display_name: "JupyterLab based on CERN Alma8"
      default: true
      description: "If you are starting a session with a GPU, please shut it down when finished in order to release the GPU."
      kubespawner_override:
        node_selector: {'cms-af-prod': 'true'}
        lifecycle_hooks:
          preStop:
            exec:
              command: ["bash", "-c", "rm -f eos-cern"]
      profile_options:
        cpu:
          display_name: "CPUs"
          choices:
            1:
              display_name: "4"
              kubespawner_override:
                cpu_limit: 4
                cpu_guarantee: 4
            2: 
              display_name: "16"
              kubespawner_override:
                cpu_limit: 16
                cpu_guarantee: 16
            3:
              display_name: "32"
              kubespawner_override:
                cpu_limit: 32
                cpu_guarantee: 32
            4:
              display_name: "64"
              kubespawner_override:
                cpu_limit: 64
                cpu_guarantee: 64
            # 5:
            #   display_name: "128"
            #   kubespawner_override:
            #     cpu_limit: 128
            #     cpu_guarantee: 128
        gpu:
          display_name: "GPUs"
          choices:
            1:
              display_name: "0"
              kubespawner_override:
                extra_resource_limits:
                  nvidia.com/mig-1g.5gb: 0
                  # nvidia.com/mig-7g.40gb: 0
            2:
              display_name: "1 GPU slice (5GB)"
              kubespawner_override:
                extra_resource_limits:
                  nvidia.com/mig-1g.5gb: 1
            3:
              display_name: "1 full GPU (40GB) - subject to availability"
              kubespawner_override:
                extra_resource_limits:
                  nvidia.com/mig-7g.40gb: 1

        memory:
          display_name: "Memory"
          choices:
            1:
              display_name: "16 GB"
              kubespawner_override:
                mem_limit: "16G"
                mem_guarantee: "16G"
            2:
              display_name: "32 GB"
              kubespawner_override:
                mem_limit: "32G" 
                mem_guarantee: "32G"
            3:
              display_name: "64 GB"
              kubespawner_override:
                mem_limit: "64G" 
                mem_guarantee: "64G"
            4:
              display_name: "128 GB"
              kubespawner_override:
                mem_limit: "128G" 
                mem_guarantee: "128G"
            # 5:
            #   display_name: "256 GB"
            #   kubespawner_override:
            #     mem_limit: "256G" 
            #     mem_guarantee: "256G"

    - display_name: Minimal JupyterLab interface
      default: false
      description: "Should be used only for debugging - no Analysis Facility functionality."
      kubespawner_override:
        image: "geddes-registry.rcac.purdue.edu/cms/cmsaf-base-notebook:1.1"
        node_selector:
          cms-af-prod: "true"
        cpu_guarantee: 4
        cpu_limit: 4        
        mem_guarantee: 16G
        mem_limit: 16G

    # - display_name: testing
    #   default: false
    #   description: "ignore this"
    #   kubespawner_override:
    #     image: "geddes-registry.rcac.purdue.edu/cms/cmsaf-alma8:0.9.4"
    #     node_selector:
    #       cms-af-prod: "true"
    #     cpu_guarantee: 4
    #     cpu_limit: 4        
    #     mem_guarantee: 16G
    #     mem_limit: 16G
    #     extra_resource_limits:
    #       nvidia.com/mig-7g.40gb: 1


  extraContainers:
    - name: af-pod-metrics
      image: geddes-registry.rcac.purdue.edu/cms/cmsaf-pod-metrics-sidecar:0.2
      command: [ "python", "/app/pod-metrics-exporter.py"]
      volumeMounts:
      - name: volume-{username}
        mountPath: /home/{legacy_escape_username}
      - name: work
        mountPath: /work/
        mountPropagation: HostToContainer
  defaultUrl: "/lab"
  extraEnv:
    JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
    CHOWN_HOME: "yes"
    NAMESPACE: "cms"
  networkPolicy:
    enabled: false
  storage:
    capacity: 25Gi
    dynamic:
      storageClass: geddes-standard-multinode
      storageAccessModes:
        - ReadWriteMany
    homeMountPath: /home/{legacy_escape_username}
    extraVolumes:
      - name: cvmfs
        hostPath: 
          path: /cvmfs
      - name: eos
        hostPath: 
          path: /eos
      - name: depot
        nfs:
          server: datadepot.rcac.purdue.edu
          path: /depot/cms
      - name: work
        persistentVolumeClaim:
          claimName: af-shared-storage
      - name: munge-key
        secret:
          secretName: munge-key
    extraVolumeMounts:
      - name: cvmfs
        mountPath: /cvmfs
        mountPropagation: HostToContainer
      - name: eos
        mountPath: /eos
        mountPropagation: HostToContainer
      - name: depot
        mountPath: /depot/cms
        mountPropagation: HostToContainer
      - name: work
        mountPath: /work/
        mountPropagation: HostToContainer
      - name: munge-key
        mountPath: /etc/secrets/munge
        readOnly: false
        mountPropagation: HostToContainer
  cloudMetadata:
    blockWithIptables: false
prePuller:
  hook:
    enabled: false
  continuous:
    enabled: false
hub:
  nodeSelector: {'cms-af-prod': 'true'}
  resources:
    requests:
      cpu: 1
      memory: 2Gi
    limits:
      cpu: 1
      memory: 2Gi
  extraVolumes:
    - name: purdue-auth
      secret:
        secretName: purdue-auth
    - name: cern-auth
      secret:
        secretName: cern-auth
    - name: auth-secret
      secret:
        secretName: auth-secret
  extraVolumeMounts:
    - mountPath: /etc/secrets/purdue-auth/
      name: purdue-auth
      readOnly: true
    - mountPath: /etc/secrets/cern-auth/
      name: cern-auth
      readOnly: true
  extraEnv:
    CILOGON_CLIENT_ID:
      valueFrom:
        secretKeyRef:
          name: auth-secret
          key: cilogon_client_id
    CILOGON_CLIENT_SECRET:
      valueFrom:
        secretKeyRef:
          name: auth-secret
          key: cilogon_client_secret
  extraFiles:
    00-custom-spawner:
      mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/custom-spawner.py
    01-set-user-info:
      mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/set-user-info.py  
  config:
    PurdueCILogonOAuthenticator:
      auto_login: True
      auto_login_oauth2_authorize: True
      logout_redirect_url: https://cms.geddes.rcac.purdue.edu/hub
      admin_users: ['dkondra']
      oauth_callback_url: https://cms.geddes.rcac.purdue.edu/hub/oauth_callback
      enable_auth_state: true
      allowed_idps:
        https://cern.ch/login:
          allow_all: true
          username_derivation:
            username_claim: eppn
        https://idp.fnal.gov/idp/shibboleth:
          allow_all: true
          username_derivation:
            username_claim: eppn
        https://idp.purdue.edu/idp/shibboleth:
          allow_all: true
          username_derivation:
            username_claim: eppn
    JupyterHub:
      authenticator_class: cilogon
      admin_access: True
scheduling:
  userScheduler:
    enabled: false
  userPods:
      tolerations:
        - key: "hub.jupyter.org/dedicated"
          operator: "Equal"
          value: "cms-af"
          effect: "NoSchedule"
ingress:
  enabled: true
  hosts:
    - cms.geddes.rcac.purdue.edu
  annotations:
    kubernetes.io/ingress.class: "public"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"

cull:
#  concurrency: 10
 enabled: true
 every: 600
#  maxAge: 0
#  removeNamedServers: false
 timeout: 1209600
#  users: false

